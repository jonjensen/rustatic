name: Rust

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: list
      run: ls -l target/release

    - name: Linux binary
      uses: actions/upload-artifact@v3
      with:
        name: rustatic-linux-release
        path: target/release/rustatic

  build-macos:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: list
      run: ls -l target/release

    - name: macOS binary
      uses: actions/upload-artifact@v3
      with:
        name: rustatic-macos-release
        path: target/release/rustatic

  build-window:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --release --verbose
    - name: Run tests
      run: cargo test --verbose
    - name: list
      run: ls -l target/release

    - name: MS Windows binary
      uses: actions/upload-artifact@v3
      with:
        name: rustatic-windows-release
        path: target/release/rustatic.exe

    - name: Release
      uses: fnkr/github-action-ghr@v1
      #if: startsWith(github.ref, 'refs/tags/')
      env:
        GHR_COMPRESS: zip
        GHR_PATH: target/release/rustatic.exe
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
